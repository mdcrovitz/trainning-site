/************************
		File:  D:\zzWork\sites\trainning-site\app\assets\styles\modules\_wrapper.css
		Description: We observe that for small devices like phones, all our text bumps
			up agains the edges. We want to fix that. But we also observe that this needed
			padding or margin is part of a larger pattern that should get shared with
			several other blocks in the system. To accomodate that pattern, we create this
			file.
************************/

.wrapper {


	/* here we deal with anything that flows outside our viewport. This is
		used to correct the problem where we have padding between columns
		and have unnexessary padding on the last right most column. See the
		_rows.css class for more explainatoin.
	*/
	overflow: hidden;

	/* If you change these padding values, be sure to change them in the
			the rule no-padding-until-medium below. We also reference this dimension
			in our testimonial rule.
	*/
	padding-left: 18px;
	padding-right: 18px;

	/* maximum view port 1200. However, we also set in our globals.css, to use
		box-sizing, so just using a max-width of 1200 would include 36px for
		padding from above. So to keep our viewport to 1200px of visible space,
		add those padding pixels below. */
	max-width: 1236px;
	margin-left: auto;	/* center content within view port */
	margin-right: auto;

	&--medium {
		max-width: 976px;
	}

	&--narrow {
		max-width: 470px;
	}

	/* A css idiom: In our html, it becomes possible that we could end up
		with nexted wrapper classes. Should that even happen, we do not want
		to cascade  the L/R padding. the following syntax addresses the case
		where we end up with nested wrappers.
	*/
	.wrapper {
		padding-left: 0;
		padding-right: 0;
	}

	/* Add a rule that adds a small bottom margin We account for
			small screens as well*/
	&--b-margin {
		margin-bottom: 1rem;

		@mixin atSmall {
			margin-bottom: 3.875rem;
		}
	}

	/* For samll screens, this wrapper class provides left and right padding.
			However, in the case of testimonials, we also have the white pannels
			for the content that also has some padding. So for small screens, this
			becomes too much padding, and this rule removes the wrapper padding
			until trhe screen size becomes medium or larger.
	*/
	&--no-padding-until-medium {
		/* For small screens, 0-out any previkous padding */
		padding-left: 0;
		padding-right: 0;

		/* when screen size hits medium, restore padding */
		@mixin atMedium {
			padding-left: 18px;
			padding-right: 18px;
		}
	}

&--no-padding-until-large {
		/* For small screens, 0-out any previkous padding */
		padding-left: 0;
		padding-right: 0;

		/* when screen size hits medium, restore padding */
		@mixin atLarge {
			padding-left: 18px;
			padding-right: 18px;
		}
	}

}



/************* End _wrapper.css **************/
